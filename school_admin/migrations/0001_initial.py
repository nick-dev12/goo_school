# Generated by Django 5.2.6 on 2025-09-26 11:36

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompteUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nom', models.CharField(blank=True, default='', max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(blank=True, default='', max_length=100, verbose_name='Prénom')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email professionnel')),
                ('telephone', models.CharField(blank=True, default='', max_length=20, verbose_name='Téléphone')),
                ('date_naissance', models.DateField(default=datetime.date(1990, 1, 1), verbose_name='Date de naissance')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='admin_photos/', verbose_name='Photo de profil')),
                ('type_compte', models.CharField(choices=[('administrateur', 'Administrateur'), ('membre', "Membre de l'équipe")], default='', max_length=50, verbose_name='Type de compte')),
                ('fonction', models.CharField(blank=True, choices=[('commercial', 'Commercial'), ('support', 'Support Client'), ('developpeur', 'Développeur'), ('marketing', 'Marketing'), ('administrateur', 'Administrateur'), ('comptable', 'Comptable'), ('ressources humaines', 'Ressources humaines')], default='', max_length=200, verbose_name="Fonction dans l'entreprise")),
                ('departement', models.CharField(choices=[('technique', 'Technique'), ('support', 'Support Client'), ('commercial', 'Commercial & Ventes'), ('marketing', 'Marketing'), ('direction', 'Direction'), ('comptable', 'Comptable'), ('ressources humaines', 'Ressources humaines')], default='', max_length=50, verbose_name='Département')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Compte',
                'verbose_name_plural': 'Comptes',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Etablissement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_etablissement', models.CharField(max_length=12, unique=True, verbose_name='Code établissement')),
                ('nom', models.CharField(max_length=255, verbose_name="Nom de l'établissement")),
                ('adresse', models.CharField(max_length=255, verbose_name='Adresse')),
                ('pays', models.CharField(max_length=255, verbose_name='Pays')),
                ('ville', models.CharField(max_length=255, verbose_name='Ville')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name="Email de l'établissement")),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone')),
                ('type_etablissement', models.CharField(choices=[('primary', 'École Primaire'), ('secondary', 'Collège'), ('highschool', 'Lycée')], max_length=20, verbose_name="Type d'établissement")),
                ('directeur_prenom', models.CharField(max_length=100, verbose_name='Prénom du directeur')),
                ('directeur_nom', models.CharField(max_length=100, verbose_name='Nom du directeur')),
                ('directeur_email', models.EmailField(max_length=254, unique=True, verbose_name='Email du directeur')),
                ('directeur_telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone du directeur')),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('actif', models.BooleanField(default=True, verbose_name='Établissement actif')),
                ('cree_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='etablissements_crees', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Établissement',
                'verbose_name_plural': 'Établissements',
                'ordering': ['-date_creation'],
            },
        ),
    ]
