# Generated by Django 5.2.6 on 2025-10-03 13:32

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('school_admin', '0025_add_personnel_administratif_model'),
    ]

    operations = [
        migrations.CreateModel(
            name='PersonnelAdministratif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email professionnel')),
                ('telephone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('date_naissance', models.DateField(verbose_name='Date de naissance')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='personnel_photos/', verbose_name='Photo de profil')),
                ('role', models.CharField(choices=[('secretaire', 'Secrétaire / Service de scolarité'), ('surveillant_general', 'Surveillant Général (SG)'), ('censeur', 'Censeur'), ('administrateur', 'Administrateur')], max_length=50, verbose_name='Rôle')),
                ('numero_employe', models.CharField(max_length=20, unique=True, verbose_name='Numéro employé')),
                ('date_embauche', models.DateField(default=django.utils.timezone.now, verbose_name="Date d'embauche")),
                ('niveau_etablissement', models.CharField(choices=[('primaire', 'Primaire'), ('college', 'Collège'), ('lycee', 'Lycée'), ('tous', 'Tous niveaux')], default='tous', max_length=20, verbose_name="Niveau d'établissement")),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('username', models.CharField(max_length=100, unique=True, verbose_name="Nom d'utilisateur")),
                ('etablissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personnel_administratif', to='school_admin.etablissement', verbose_name='Établissement')),
                ('groups', models.ManyToManyField(blank=True, related_name='personnel_administratif_set', related_query_name='personnel_administratif', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='personnel_administratif_set', related_query_name='personnel_administratif', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Personnel Administratif',
                'verbose_name_plural': 'Personnel Administratif',
                'ordering': ['-date_creation'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
